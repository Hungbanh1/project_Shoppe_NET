@model BaiTapLonWeb.Models.User

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Edit</title>
</head>
<body>
   





        @Html.Partial("_HeaderAdmin")
        <div id="wp-content">
            <div id="content" class="container-fluid">
                <div class="card">
                    <div class="card-header font-weight-bold">
                        THÊM NGƯỜI DÙNG
                    </div>
                    @using (Html.BeginForm(Html.BeginForm("Edit", "AdminUser", FormMethod.Post, new { enctype = "multipart/form-data" })))
                    {
                        @Html.AntiForgeryToken()
                <div class="card-body">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.UserID)
                    <div class="form-group">
                        <label for="name">Họ và tên</label>
                        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })

                    </div>


                    <div class="form-group">
                        <label for="email">Email</label>
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

                    </div>
                    <div class="form-group">
                        <label for="password">Mật khẩu</label>
                        @Html.EditorFor(model => model.PassWord, new { htmlAttributes = new { @class = "form-control", type = "password" } })
                        @Html.ValidationMessageFor(model => model.PassWord, "", new { @class = "text-danger" })

                    </div>



                    <div class="form-group">
                        <label for="confirm-password">Địa Chỉ</label>
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })

                    </div>
                    <div class="form-group">
                        <label for="permission">SDT</label>
                        @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label for="permission">Ảnh</label>
                        @Html.TextBoxFor(model => model.ImageUser, null, new { type = "file", @class = "form-control", onchange = "previewFile()" })
                        <img id="previewImage" src="~/public/images/@Model.ImageUser" height="300px" width="300px" @if (string.IsNullOrEmpty(Model.ImageUser)) { <text> style="display: none" </text> } />
                        @Html.Hidden("oldimage", @Model.ImageUser)
                        @Html.ValidationMessageFor(model => model.ImageUser, "", new { @class = "text-danger" })


                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.Role)
                                @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    @*<div class="form-group">
                        <label for="permission">Quyền</label>
                        @Html.EditorFor(model => model.Role)
                        @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
                    </div>*@
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-primary" />
                        </div>
                    </div>



                </div>
                    }
            </div>
        </div>



    

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

</body>
<script>
    function previewFile() {
        var preview = document.getElementById('previewImage');
        var file = document.querySelector('input[type=file]').files[0];
        var reader = new FileReader();

        reader.onloadend = function () {
            preview.src = reader.result;
            preview.style.display = 'block'; // Hiển thị ảnh
        }

        if (file) {
            reader.readAsDataURL(file);
        } else {
            preview.src = '';
            preview.style.display = 'none'; // Ẩn ảnh nếu không có file được chọn
        }
    }
</script>
